{% extends "_templates/base.html" %}
{% block content %}
{% markdown %}

# Deleting Files {: .page-header }

Enabling the deletion of files means your users can delete files after they have been uploaded.

A file is eligible for deletion only after it has been successfully uploaded.

## Options

#### `deleteFile` option

{{ options_table(
    (
        ("enabled", "`Boolean`", "`false`", "Set to `true` if users should be able to delete files."),
        ("method", "`String`", "`'DELETE'`", "Set the HTTP method to use for delete. Use POST to disable preflighted requests."),
        ("endpoint", "`String`", "`'/server/upload'`", "The endpoint where the delete request is sent."),
        ("customHeaders", "`Object`", "`{}`", "Specify any additional headers to attach to all delete requests."),
        ("params", "`Object`", "`{}`", "Specify any additonal parameters to attach to all delete requests.")
    )
) }}

## Events

{{ events_table(
    (
        ("delete", "`String` id", "Called just before a delete request is sent for the associated item."),
        ("deleteComplete", "`String` id, `XMLHttpRequest` xhr, `Boolean` isError", "Called just after receiving a request from the server for a delete file request."),
        ("submitDelete", "`String` id", "Called just before an item that has been marked for deletion has been submitted to the uploader. [Promissory](async-tasks-and-promises.html)"),
    )
) }}

## Methods

{{ methods_table(
    (
        ("deleteFile", "`String` id", "", "Delete the file with the corresponding ID off the server."),
        ("setDeleteFileEndpoint", "`String` endpointPath[, `String` id]", "", "Modify the location where the upload request should be directed. Pass in a value for the `id` parameter to change for a specific item."),
        ("setDeleteFileParams", "`String` newParams[, `String` id]", "", "Set the parameters for the delete file request.")
    )
) }}

{% endmarkdown %}
{% endblock %}
